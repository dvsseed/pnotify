{"version":3,"file":"PNotifyConfirm.js","sources":["src/PNotifyConfirm.html"],"sourcesContent":["{{#if confirm || prompt}}\n  <div\n      class=\"\n        ui-pnotify-action-bar\n        {{_notice.get('_styles').action_bar ? _notice.get('_styles').action_bar : ''}}\n        {{_notice.get('_styles').text ? _notice.get('_styles').text : ''}}\n      \"\n      style=\"text-align: {{align}};\">\n    {{#if prompt}}\n      {{#if prompt_multi_line}}\n        <textarea\n            rows=\"5\"\n            on:keypress=\"handleKeyPress(event)\"\n            ref:promptMulti\n            class=\"\n              ui-pnotify-prompt-input\n              {{_notice.get('_styles').input ? _notice.get('_styles').input : ''}}\n              {{prompt_class}}\n            \"\n            bind:value=\"prompt_value\"></textarea>\n      {{else}}\n        <input\n            type=\"text\"\n            on:keypress=\"handleKeyPress(event)\"\n            ref:promptSingle\n            class=\"\n              ui-pnotify-prompt-input\n              {{_notice.get('_styles').input ? _notice.get('_styles').input : ''}}\n              {{prompt_class}}\n            \"\n            bind:value=\"prompt_value\" />\n      {{/if}}\n    {{/if}}\n    {{#each buttons as button}}\n      <button\n          type=\"button\"\n          on:click=\"handleClick(button, event)\"\n          class=\"\n            ui-pnotify-action-button\n            {{button.primary ? (_notice.get('_styles').btn_primary ? _notice.get('_styles').btn_primary : '') : (_notice.get('_styles').btn ? _notice.get('_styles').btn : '')}}\n            {{button.addClass ? button.addClass : ''}}\n          \">{{#if button.trustText}}{{{button.text}}}{{else}}{{button.text}}{{/if}}</button>\n    {{/each}}\n  </div>\n{{/if}}\n\n<script>\n  import PNotify from \"./PNotify.html\";\n\n  export default {\n    setup (Component) {\n      Component.key = \"Confirm\";\n\n      Component.defaults = {\n        // Make a confirmation box.\n        confirm: false,\n        // Make a prompt.\n        prompt: false,\n        // Classes to add to the input element of the prompt.\n        prompt_class: \"\",\n        // The value of the prompt.\n        prompt_value: \"\",\n        // Whether the prompt should accept multiple lines of text.\n        prompt_multi_line: false,\n        // Where to align the buttons. (right, center, left, justify)\n        align: \"right\",\n        // The buttons to display, and their callbacks.\n        buttons: [\n          {\n            text: \"Ok\",\n            trustText: false,\n            addClass: \"\",\n            primary: true,\n            // Whether to trigger this button when the user hits enter in a single line prompt.\n            promptTrigger: true,\n            click: (notice, value) => {\n              notice.close();\n              notice.fire(\"pnotify.confirm\", {notice, value});\n            }\n          },\n          {\n            text: \"Cancel\",\n            trustText: false,\n            addClass: \"\",\n            click: (notice) => {\n              notice.close();\n              notice.fire(\"pnotify.cancel\", {notice});\n            }\n          }\n        ]\n      };\n\n      // Register the module with PNotify.\n      PNotify.modules.Confirm = Component;\n      // Append this module to the container.\n      PNotify.modulesAppendContainer.push(Component);\n\n      // Add button styles to styling objects.\n      Object.assign(PNotify.styling.brighttheme, {\n        action_bar: \"\",\n        btn: \"\",\n        btn_primary: \"brighttheme-primary\",\n        input: \"\"\n      });\n      Object.assign(PNotify.styling.bootstrap3, {\n        action_bar: \"ui-pnotify-confirm-ml\",\n        btn: \"btn btn-default\",\n        btn_primary: \"btn btn-default btn-primary\",\n        input: \"form-control\"\n      });\n      Object.assign(PNotify.styling.bootstrap4, {\n        action_bar: \"ui-pnotify-confirm-ml\",\n        btn: \"btn btn-secondary ml-1\",\n        btn_primary: \"btn btn-primary ml-1\",\n        input: \"form-control\"\n      });\n      if (!PNotify.styling.material) {\n        PNotify.styling.material = {};\n      }\n      Object.assign(PNotify.styling.material, {\n        action_bar: \"\",\n        btn: \"\",\n        btn_primary: \"ui-pnotify-material-primary\",\n        input: \"\"\n      });\n    },\n\n    oncreate () {\n      this.fire(\"init\", {module: this});\n    },\n\n    data () {\n      return Object.assign({\n        \"_notice\": null, // The PNotify notice.\n        \"_options\": {}, // The options for the notice.\n      }, PNotify.modules.Confirm.defaults);\n    },\n\n    methods: {\n      initModule(options) {\n        this.set(options);\n      },\n\n      afterOpen() {\n        if (this.get(\"prompt\")) {\n          if (this.get(\"prompt_multi_line\")) {\n            this.refs.promptMulti.focus();\n          } else {\n            this.refs.promptSingle.focus();\n          }\n        }\n      },\n\n      handleClick(button, event) {\n        if (button.click) {\n          button.click(this.get(\"_notice\"), this.get(\"prompt\") ? this.get(\"prompt_value\") : null, event);\n        }\n      },\n\n      handleKeyPress(event) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n          event.preventDefault();\n          const buttons = this.get(\"buttons\");\n          for (let i = 0; i < buttons.length; i++) {\n            if (buttons[i].promptTrigger && buttons[i].click) {\n              buttons[i].click(this.get(\"_notice\"), this.get(\"prompt\") ? this.get(\"prompt_value\") : null, event);\n            }\n          }\n        }\n      }\n    }\n  }\n</script>\n\n<style>\n  :global(.ui-pnotify-action-bar) {\n    margin-top: 5px;\n    clear: both;\n  }\n  :global(.ui-pnotify-prompt-input) {\n    margin-bottom: 5px;\n    clear: both;\n  }\n  :global(.ui-pnotify.ui-pnotify-with-icon .ui-pnotify-action-bar.ui-pnotify-confirm-ml) {\n    margin-left: 24px;\n  }\n</style>\n"],"names":[],"mappings":"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"}