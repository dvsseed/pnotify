{"version":3,"file":"PNotifyHistory.js","sources":["src/PNotifyHistory.html"],"sourcesContent":["<script>\n  import PNotify from \"./PNotify.html\";\n\n  export default {\n    setup (Component) {\n      Component.key = \"History\";\n\n      Component.defaults = {\n        // Place the notice in the history.\n        history: true,\n        // Maximum number of notices to have open in its stack.\n        max_in_stack: Infinity\n      };\n\n      Component.init = (notice) => {\n        return new Component({target: document.body});\n      };\n\n      Component.showLast = (stack) => {\n        if (stack === undefined) {\n          stack = PNotify.defaultStack;\n        }\n        if (stack === false) {\n          return;\n        }\n        const top = (stack.push === \"top\");\n\n        // Look up the last history notice, and display it.\n        let i = (top ? 0 : PNotify.notices.length - 1);\n\n        let notice;\n        do {\n          notice = PNotify.notices[i];\n\n          if (!notice) {\n            return;\n          }\n\n          i += (top ? 1 : -1);\n        } while (\n          notice.get(\"stack\") !== stack\n          || !notice.get(\"_modules\").History.get(\"history\")\n          || notice.get(\"_state\") === \"opening\"\n          || notice.get(\"_state\") === \"open\"\n        );\n\n        notice.open();\n      };\n\n      Component.showAll = (stack) => {\n        if (stack === undefined) {\n          stack = PNotify.defaultStack;\n        }\n        if (stack === false) {\n          return;\n        }\n\n        // Display all notices. (Disregarding non-history notices.)\n        for (let i = 0; i < PNotify.notices.length; i++) {\n          const notice = PNotify.notices[i];\n          if (\n              (\n                stack === true\n                || notice.get(\"stack\") === stack\n              )\n              && notice.get(\"_modules\").History.get(\"history\")\n            ) {\n            notice.open();\n          }\n        };\n      };\n\n      // Register the module with PNotify.\n      PNotify.modules.History = Component;\n    },\n\n    oncreate () {\n      this.on(\"initModule\", (options) => {\n        this.set(options);\n\n        if (this.get(\"history\")) {\n          // Don't destroy notices that are in history.\n          const notice = this.get(\"_notice\");\n          if (notice.get(\"destroy\")) {\n            notice.set({\"destroy\": false});\n          }\n        }\n      });\n    },\n\n    data () {\n      return Object.assign({\n        \"_notice\": null, // The PNotify notice.\n        \"_options\": {}, // The options for the notice.\n      }, PNotify.modules.History.defaults);\n    },\n\n    methods: {\n      beforeOpen() {\n        const max_in_stack = this.get(\"max_in_stack\");\n        if (max_in_stack === Infinity) {\n          return;\n        }\n\n        const stack = this.get(\"_options\").stack;\n        if (stack === false) {\n          return;\n        }\n\n        // Remove oldest notifications leaving only max_in_stack from the stack.\n        if (PNotify.notices && (PNotify.notices.length > max_in_stack)) {\n          // Oldest are normally in front of array, or if stack.push==\"top\" then\n          // they are at the end of the array!\n          const top = stack.push === \"top\";\n          const forRemoval = [];\n          let currentOpen = 0;\n\n          for (let i = (top ? 0 : PNotify.notices.length - 1); (top ? i < PNotify.notices.length : i >= 0); (top ? i++ : i--)) {\n            if (\n                [\"opening\", \"open\"].indexOf(PNotify.notices[i].get(\"_state\")) !== -1\n                && PNotify.notices[i].get(\"stack\") === stack\n              ) {\n              if (currentOpen >= max_in_stack) {\n                forRemoval.push(PNotify.notices[i]);\n              } else {\n                currentOpen++;\n              }\n            }\n          }\n\n          for (let i = 0; i < forRemoval.length; i++) {\n            forRemoval[i].close(false);\n          }\n        }\n      }\n    }\n  }\n</script>\n"],"names":[],"mappings":"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"}